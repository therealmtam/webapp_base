"use strict";

var log4js = require('log4js');
const Logger = require('./logger');

/**
 * Global logger instance
 * @type {Logger}
 */
let logger = null;

/**
 * Log4js-based LogFactory
 */
let LogFactory = {};

/**
 * Initializes the Logging system.
 *
 * @param {string} name Name of the logger
 * @param {string} level The lowest logging level to output
 * @param {string} loggingIndex The ELK logging index of the logger
 * @param {string} packageName An optional package name
 */
LogFactory.init = (name, level, loggingIndex, packageName) => {
  log4js.configure(
    {
      levels: {
        "[all]": level,
      },
      appenders: [
        {
          type: 'console',
          layout: {
            type: 'messagePassThrough'
          }
        }]
    });
  logger = new Logger(log4js.getLogger(), name, loggingIndex, packageName);
};

/**
 * @returns {Logger}
 */
LogFactory.get = () => {
  if (!logger) {
    console.log(new Error("Logger is not initialized.  Initializing using defaults"));
    module.exports.init('logger', 'info', 'logging', 'package');
  }
  return logger;
};


module.exports.init = LogFactory.init;

/**
 * @returns {Logger}
 */
module.exports.get = LogFactory.get;
