'use strict';

// String can not be modified on it's own so a local copy must be used
var extend = String;

extend.prototype.trimChar = function (replacement, trimWhiteSpace) {
    var self = this;

    // local function to recursively trim whitespace
    function trim(value, regExp) {
        if (trimWhiteSpace) {
            value = value.trim();
        }
        if (regExp) {
            // use recursion to trim whitespace after cleaning
            return trim(value.replace(regExp, ''));
        }
        return value;
    }

    // set default values of replacement if not supplied
    replacement = replacement || '';
    // escape regex characters before generating the new regex
    replacement = replacement.toString().replace(/([\\\^\$\.\|\?\*\+\(\)\[\]\{\}])/g, '\\$1');

    if (replacement) {
        var result = self;
        // trim left
        result = trim(result, new RegExp('^' + replacement));
        // trim right
        result = trim(result, new RegExp(replacement + '$'));
        return result;
    }
    return self.trim();
};
